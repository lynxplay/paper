From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Cryptite <cryptite@gmail.com>
Date: Mon, 1 May 2023 16:22:43 -0500
Subject: [PATCH] Add PlayerShieldDisableEvent

Called whenever a players shield is disabled. This is mainly caused by
attacking players or monsters that carry axes.

The event, while similar to the PlayerItemCooldownEvent, offers other
behaviour and can hence not be implemented as a childtype of said event.
Specifically, cancelling the event prevents the game events from being
sent to the player.

Plugins listening to just the PlayerItemCooldownEvent may not want said
sideeffects, meaning the disable event cannot share a handlerlist with
the cooldown event

diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 433d8eccdd225651af8c88babfdb94d19ce546d8..026654c4d3a910f0dbfed5475f23137086618242 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1690,7 +1690,11 @@ public abstract class Mob extends LivingEntity implements Targeting {
             float f = 0.25F + (float) EnchantmentHelper.getBlockEfficiency(this) * 0.05F;
 
             if (this.random.nextFloat() < f) {
-                player.getCooldowns().addCooldown(Items.SHIELD, 100);
+                // Paper start - Add PlayerShieldDisableEvent
+                final io.papermc.paper.event.player.PlayerShieldDisableEvent shieldDisableEvent = new io.papermc.paper.event.player.PlayerShieldDisableEvent((org.bukkit.entity.Player) player.getBukkitEntity(), getBukkitEntity(), 100);
+                if (!shieldDisableEvent.callEvent()) return;
+                player.getCooldowns().addCooldown(Items.SHIELD, shieldDisableEvent.getCooldown());
+                // Paper end - Add PlayerShieldDisableEvent
                 this.level().broadcastEntityEvent(player, (byte) 30);
             }
         }
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index d8ef2466e235b8121dd04bde0800ed2dbf8e370c..4f2d4ed485ce0d5f82f562281c40dc6a660e554b 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -971,7 +971,7 @@ public abstract class Player extends LivingEntity {
     protected void blockUsingShield(LivingEntity attacker) {
         super.blockUsingShield(attacker);
         if (attacker.canDisableShield()) {
-            this.disableShield(true);
+            this.disableShield(true, attacker); // Paper - Add PlayerShieldDisableEvent
         }
 
     }
@@ -1454,7 +1454,14 @@ public abstract class Player extends LivingEntity {
         this.attack(target);
     }
 
+    @io.papermc.paper.annotation.DoNotUse @Deprecated // Paper - Add PlayerShieldDisableEvent
     public void disableShield(boolean sprinting) {
+        // Paper start - Add PlayerShieldDisableEvent
+        disableShield(sprinting, null);
+    }
+
+    public void disableShield(boolean sprinting, @Nullable LivingEntity attacker) {
+        // Paper end - Add PlayerShieldDisableEvent
         float f = 0.25F + (float) EnchantmentHelper.getBlockEfficiency(this) * 0.05F;
 
         if (sprinting) {
@@ -1462,7 +1469,16 @@ public abstract class Player extends LivingEntity {
         }
 
         if (this.random.nextFloat() < f) {
-            this.getCooldowns().addCooldown(Items.SHIELD, 100);
+            // Paper start - Add PlayerShieldDisableEvent
+            final org.bukkit.entity.Entity finalAttacker = attacker != null ? attacker.getBukkitEntity() : null;
+            if (finalAttacker != null) {
+                final io.papermc.paper.event.player.PlayerShieldDisableEvent shieldDisableEvent = new io.papermc.paper.event.player.PlayerShieldDisableEvent((org.bukkit.entity.Player) getBukkitEntity(), finalAttacker, 100);
+                if (!shieldDisableEvent.callEvent()) return;
+                this.getCooldowns().addCooldown(Items.SHIELD, shieldDisableEvent.getCooldown());
+            } else {
+                this.getCooldowns().addCooldown(Items.SHIELD, 100);
+            }
+            // Paper end - Add PlayerShieldDisableEvent
             this.stopUsingItem();
             this.level().broadcastEntityEvent(this, (byte) 30);
         }
