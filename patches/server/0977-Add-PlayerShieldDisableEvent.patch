From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Cryptite <cryptite@gmail.com>
Date: Mon, 1 May 2023 16:22:43 -0500
Subject: [PATCH] Add PlayerShieldDisableEvent

Called whenever a players shield is disabled. This is mainly caused by
attacking players or monsters that carry axes.

The event, while similar to the PlayerItemCooldownEvent, offers other
behaviour and can hence not be implemented as a childtype of said event.
Specifically, cancelling the event prevents the game events from being
sent to the player.

Plugins listening to just the PlayerItemCooldownEvent may not want said
sideeffects, meaning the disable event cannot share a handlerlist with
the cooldown event

diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 1721504912c9e5744f09c17d059315ee357afeb4..9ecabac9e95bb0b550260770fcc713ad82070d0b 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1697,7 +1697,11 @@ public abstract class Mob extends LivingEntity implements Targeting {
             float f = 0.25F + (float) EnchantmentHelper.getBlockEfficiency(this) * 0.05F;
 
             if (this.random.nextFloat() < f) {
-                player.getCooldowns().addCooldown(Items.SHIELD, 100);
+                // Paper start - Add PlayerShieldDisableEvent
+                final io.papermc.paper.event.player.PlayerShieldDisableEvent shieldDisableEvent = new io.papermc.paper.event.player.PlayerShieldDisableEvent((org.bukkit.entity.Player) player.getBukkitEntity(), getBukkitEntity(), 100);
+                if (!shieldDisableEvent.callEvent()) return;
+                player.getCooldowns().addCooldown(Items.SHIELD, shieldDisableEvent.getCooldown());
+                // Paper end - Add PlayerShieldDisableEvent
                 this.level().broadcastEntityEvent(player, (byte) 30);
             }
         }
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 2a280a54bdd7e4b7f26e0b2d2da0d9d3fd432583..ade64d3af069abdb5c94895fe699ac5eee603a6e 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -972,7 +972,7 @@ public abstract class Player extends LivingEntity {
     protected void blockUsingShield(LivingEntity attacker) {
         super.blockUsingShield(attacker);
         if (attacker.canDisableShield()) {
-            this.disableShield(true);
+            this.disableShield(true, attacker); // Paper - Add PlayerShieldDisableEvent
         }
 
     }
@@ -1455,7 +1455,14 @@ public abstract class Player extends LivingEntity {
         this.attack(target);
     }
 
+    @io.papermc.paper.annotation.DoNotUse @Deprecated // Paper - Add PlayerShieldDisableEvent
     public void disableShield(boolean sprinting) {
+        // Paper start - Add PlayerShieldDisableEvent
+        disableShield(sprinting, null);
+    }
+
+    public void disableShield(boolean sprinting, @Nullable LivingEntity attacker) {
+        // Paper end - Add PlayerShieldDisableEvent
         float f = 0.25F + (float) EnchantmentHelper.getBlockEfficiency(this) * 0.05F;
 
         if (sprinting) {
@@ -1463,7 +1470,16 @@ public abstract class Player extends LivingEntity {
         }
 
         if (this.random.nextFloat() < f) {
-            this.getCooldowns().addCooldown(Items.SHIELD, 100);
+            // Paper start - Add PlayerShieldDisableEvent
+            final org.bukkit.entity.Entity finalAttacker = attacker != null ? attacker.getBukkitEntity() : null;
+            if (finalAttacker != null) {
+                final io.papermc.paper.event.player.PlayerShieldDisableEvent shieldDisableEvent = new io.papermc.paper.event.player.PlayerShieldDisableEvent((org.bukkit.entity.Player) getBukkitEntity(), finalAttacker, 100);
+                if (!shieldDisableEvent.callEvent()) return;
+                this.getCooldowns().addCooldown(Items.SHIELD, shieldDisableEvent.getCooldown());
+            } else {
+                this.getCooldowns().addCooldown(Items.SHIELD, 100);
+            }
+            // Paper end - Add PlayerShieldDisableEvent
             this.stopUsingItem();
             this.level().broadcastEntityEvent(this, (byte) 30);
         }
